				;file C:\Users\L0614\Desktop\Holtek\Holtek-HT66F70A-LCD\LCD_TEST\LCD_TEST.c
				;1	#include "HT66F70A.h"
				;2	#include "holtek_lcd.h"
				;3	#include "holtek_lcd.c"
				;4	void PAUSE(unsigned short i);
				;5	void main()
				;6	{	
				@code .SECTION 'CODE'
				include HT66F70A.inc
0000	1F0B	clr     BP
0001	2802	jmp     _main_startup1
				@start .SECTION 'CODE'
				_main_startup1:
				@start .SECTION 'CODE'
0002	0F00	mov     a, 0H
0003	008B	mov     BP, a
0004	28A0	jmp     _main
				;7		unsigned short i;
				;8		LCD_Init();
				_main:
				_main:
00A0	2041	call    _LCD_Init
				;9		PAUSE(100);
00A1	0F64	mov     a, 64H
00A2	4084	mov     i, a
00A3	5F05	clr     cmd
00A4	2022	call    _PAUSE
				;10		while(1)
				;11		{
				;12			LCD_CMD(0,0x80);
				_L14:
00A5	0F80	mov     a, 80H
00A6	4085	mov     cmd, a
00A7	5F06	clr     cmd[1]
00A8	5F03	clr     RS
00A9	5F04	clr     i
00AA	2005	call    _LCD_CMD
00AB	5F07	clr     _main_2
				;13			for(i = 0;i < 16;i++)
00B8	4707	mov     a, _main_2
00B9	0A10	sub     a, 10H
00BA	390A	snz     Z
00BB	28AC	jmp     _L12
				;14			{
				;15				LCD_CMD(1,0x31);
				_L12:
00AC	0F31	mov     a, 31H
00AD	4085	mov     cmd, a
00AE	5F06	clr     cmd[1]
00AF	0F01	mov     a, 1H
00B0	4083	mov     RS, a
00B1	5F04	clr     i
00B2	2005	call    _LCD_CMD
				;16				PAUSE(100);
00B3	0F64	mov     a, 64H
00B4	4084	mov     i, a
00B5	5F05	clr     cmd
00B6	2022	call    _PAUSE
00B7	5487	inc     _main_2
				;17			}
				;18			LCD_CMD(0,0xC0);
00BC	0FC0	mov     a, C0H
00BD	4085	mov     cmd, a
00BE	5F06	clr     cmd[1]
00BF	5F03	clr     RS
00C0	5F04	clr     i
00C1	2005	call    _LCD_CMD
00C2	5F07	clr     _main_2
				;19			for(i = 0;i < 16;i++)
00CF	4707	mov     a, _main_2
00D0	0A10	sub     a, 10H
00D1	390A	snz     Z
00D2	28C3	jmp     _L15
00D3	28A5	jmp     _L14
00D4	28D4	jmp     $
				;20			{
				;21				LCD_CMD(1,0x32);
				_L15:
00C3	0F32	mov     a, 32H
00C4	4085	mov     cmd, a
00C5	5F06	clr     cmd[1]
00C6	0F01	mov     a, 1H
00C7	4083	mov     RS, a
00C8	5F04	clr     i
00C9	2005	call    _LCD_CMD
				;22				PAUSE(100);
00CA	0F64	mov     a, 64H
00CB	4084	mov     i, a
00CC	5F05	clr     cmd
00CD	2022	call    _PAUSE
00CE	5487	inc     _main_2
				;23			}
				;24		}
				;25		
				;26		
				;27	}
				;28	void PAUSE(unsigned short i)						
				;29	{	unsigned short j;
				;30		for (j=0;j<i;j++) GCC_DELAY(10000);				//Delay i*10mS 
				_PAUSE:
				_PAUSE:
0022	5F01	clr     rb
0023	5F02	clr     rc
0024	2830	jmp     _L8
				_L9:
0025	0F09	mov     a, 9H
0026	4083	mov     RS, a
0027	0FBD	mov     a, BDH
0028	340B	clr     BP0
0029	348B	clr     BP1
002A	2018	call    L0018
002B	348B	clr     BP1
002C	340B	clr     BP0
002D	5481	inc     rb
002E	3D0A	sz      Z
002F	5482	inc     rc
				_L8:
0030	4701	mov     a, rb
0031	4204	sub     a, i[0]
0032	4702	mov     a, rc
0033	5205	sbc     a, i[1]
0034	3B0A	snz     CZ
0035	2825	jmp     _L9
0036	0003	ret
0037	0000	nop
0038	0000	nop
0039	0000	nop
003A	0000	nop
003B	0000	nop
003C	0000	nop
				L003D:
003D	0000	nop
003E	1785	sdz     ACC
003F	283D	jmp     L003D
0040	0003	ret
				;31	}
				;file C:\Users\L0614\Desktop\Holtek\Holtek-HT66F70A-LCD\LCD_TEST\holtek_lcd.c
				;1	#include "HT66F70A.h"
				;2	#include "holtek_lcd.h"
				;3	#include <string.h>
				;4	// E = PE0 | RS = PE1 | R/W = GND | DATA = PD
				;5	#define LCD_EN			_pe0
				;6	#define LCD_ENC			_pec0
				;7	#define LCD_RS			_pe1
				;8	#define LCD_RSC			_pec1
				;9	//#define LCD_RW			_pe2
				;10	//#define LCD_RWC			_pec2
				;11	#define LCD_DataPort	_pd
				;12	#define LCD_DataPortC	_pdc
				;13	
				;14	void LCD_Init(void)
				;15	{
				;16		LCD_EN = 0;
				_LCD_Init:
				_LCD_Init:
0041	3422	clr     PE0
				;17		LCD_RS = 0;
0042	34A2	clr     PE1
				;18		LCD_ENC = 0;
0043	3423	clr     PEC0
				;19		LCD_RSC = 0;
0044	34A3	clr     PEC1
				;20		GCC_DELAY(15000);
0045	0F0E	mov     a, EH
0046	4083	mov     RS, a
0047	0F9C	mov     a, 9CH
0048	340B	clr     BP0
0049	348B	clr     BP1
004A	2016	call    L0016
004B	348B	clr     BP1
004C	340B	clr     BP0
				;21		LCD_CMD(0,0x38);
004D	0F38	mov     a, 38H
004E	4085	mov     cmd, a
004F	5F06	clr     cmd[1]
0050	5F03	clr     RS
0051	5F04	clr     i
0052	2005	call    _LCD_CMD
				;22		GCC_DELAY(4100);
0053	0F03	mov     a, 3H
0054	4083	mov     RS, a
0055	0FFD	mov     a, FDH
0056	340B	clr     BP0
0057	348B	clr     BP1
0058	2018	call    L0018
0059	348B	clr     BP1
005A	340B	clr     BP0
				;23		LCD_CMD(0,0x38);
005B	0F38	mov     a, 38H
005C	4085	mov     cmd, a
005D	5F06	clr     cmd[1]
005E	5F03	clr     RS
005F	5F04	clr     i
0060	2005	call    _LCD_CMD
				;24		GCC_DELAY(1000);
0061	0FF8	mov     a, F8H
0062	340B	clr     BP0
0063	348B	clr     BP1
0064	203D	call    L003D
0065	348B	clr     BP1
0066	340B	clr     BP0
				;25		LCD_CMD(0,0x38);
0067	0F38	mov     a, 38H
0068	4085	mov     cmd, a
0069	5F06	clr     cmd[1]
006A	5F03	clr     RS
006B	5F04	clr     i
006C	2005	call    _LCD_CMD
				;26		GCC_DELAY(1000);
006D	0FF8	mov     a, F8H
006E	340B	clr     BP0
006F	348B	clr     BP1
0070	203D	call    L003D
0071	348B	clr     BP1
0072	340B	clr     BP0
				;27		LCD_CMD(0,0x38);
0073	0F38	mov     a, 38H
0074	4085	mov     cmd, a
0075	5F06	clr     cmd[1]
0076	5F03	clr     RS
0077	5F04	clr     i
0078	2005	call    _LCD_CMD
				;28		GCC_DELAY(1000);
0079	0FF8	mov     a, F8H
007A	340B	clr     BP0
007B	348B	clr     BP1
007C	203D	call    L003D
007D	348B	clr     BP1
007E	340B	clr     BP0
				;29		LCD_CMD(0,0x08);
007F	0F08	mov     a, 8H
0080	4085	mov     cmd, a
0081	5F06	clr     cmd[1]
0082	5F03	clr     RS
0083	5F04	clr     i
0084	2005	call    _LCD_CMD
				;30		LCD_CMD(0,0x01);
0085	0F01	mov     a, 1H
0086	4085	mov     cmd, a
0087	5F06	clr     cmd[1]
0088	5F03	clr     RS
0089	5F04	clr     i
008A	2005	call    _LCD_CMD
				;31		LCD_CMD(0,0x06);
008B	0F06	mov     a, 6H
008C	4085	mov     cmd, a
008D	5F06	clr     cmd[1]
008E	5F03	clr     RS
008F	5F04	clr     i
0090	2005	call    _LCD_CMD
				;32		LCD_CMD(0,0x0C);
0091	0F0C	mov     a, CH
0092	4085	mov     cmd, a
0093	5F06	clr     cmd[1]
0094	5F03	clr     RS
0095	5F04	clr     i
0096	2005	call    _LCD_CMD
				;33		GCC_DELAY(2000);
0097	0F01	mov     a, 1H
0098	4083	mov     RS, a
0099	0FF1	mov     a, F1H
009A	340B	clr     BP0
009B	348B	clr     BP1
009C	2018	call    L0018
009D	348B	clr     BP1
009E	340B	clr     BP0
009F	0003	ret
				;34	}
				;35	void LCD_CMD(unsigned short RS,unsigned short cmd)
				;36	{ 
				;37		LCD_DataPortC = 0;
				_LCD_CMD:
				_LCD_CMD:
0005	1F1F	clr     PDC
				;38		LCD_RS = RS;
0006	4703	mov     a, RS[0]
0007	0E01	and     a, 1H
0008	4080	mov     ra, a
0009	4700	mov     a, ra
000A	4380	addm    a, ra
000B	34A2	clr     PE1
000C	4700	mov     a, ra
000D	05A2	orm     a, PE
				;39		LCD_DataPort = cmd;
000E	4705	mov     a, cmd[0]
000F	009E	mov     PD, a
				;40		LCD_EN = 1;
0010	3022	set     PE0
				;41		_nop();
0011	0000	nop
				;42		LCD_EN = 0;
0012	3422	clr     PE0
0013	0003	ret
0014	0000	nop
0015	0000	nop
				L0016:
0016	0000	nop
0017	0000	nop
				L0018:
0018	0000	nop
				L0019:
0019	0000	nop
001A	1785	sdz     ACC
001B	2819	jmp     L0019
				L001C:
001C	0000	nop
001D	1785	sdz     ACC
001E	281C	jmp     L001C
001F	5783	sdz     RS[0]
0020	281C	jmp     L001C
0021	0003	ret
				;43	}
				;44	
				;45	void DELAY_MS(unsigned short i)						
				;46	{	unsigned short j;
				;47		for (j=0;j<i;j++) GCC_DELAY(1000);				//Delay i*10mS 
				;48	}
				data .SECTION 'DATA'
				__pd DB DUP (?) ; __pd
				__pdc DB DUP (?) ; __pdc
				__pe DB DUP (?) ; __pe
				__pec DB DUP (?) ; __pec
				ra DB DUP (?)
				rb DB DUP (?)
				rc DB DUP (?)
				RS DB 2 DUP (?) ; RS
				i DB 2 DUP (?) ; i
				cmd DB 2 DUP (?) ; cmd
				_main_2 DB DUP (?)
